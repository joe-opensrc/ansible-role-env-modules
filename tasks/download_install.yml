---
# tasks file for module
- name: Create dirs
  become: yes
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ modules_sys_user }}"
    group: "{{ modules_sys_user }}"
    mode: 0755
  loop:
    - "{{ modules_tmp_dir }}"
    - "{{ modules_download_dir }}"
    - "{{ modules_build_dir }}"
    - "{{ modules_root_prefix }}"
    - "{{ modules_profiles_dir }}"

- name: Info¦ modules_download_url
  ansible.builtin.debug:
    msg: "{{ modules_download_url }}"

- name: Fetch Modules
  become: yes
  ansible.builtin.get_url:
    url: "{{ modules_download_url }}"
    dest: "{{ modules_download_dir }}"
    owner: "{{ modules_sys_user }}"
    group: "{{ modules_sys_user }}"
    mode: 0750

- name: Extract modules release binaries
  become: yes
  register: binaries_extracted
  ansible.builtin.unarchive:
    remote_src: true
    list_files: yes
    owner: "{{ modules_sys_user }}"
    group: "{{ modules_sys_user }}"
    src: "{{ modules_download_url }}"
    dest: "{{ modules_build_dir }}/"

- name: Info¦ extracted binaries?
  ansible.builtin.debug:
    msg: "{{ binaries_extracted }}"

- name: Build¦ make clean
  become: yes
  become_flags: "-u {{ modules_sys_user }}"
  args:
    chdir: "{{ modules_build_dir }}/{{ binaries_extracted.files[0] }}"
  ansible.builtin.shell:
    make clean || true

- name: Build¦ configure modules src
  become: yes
  become_flags: "-u {{ modules_sys_user }}"
  args:
    chdir: "{{ modules_build_dir }}/{{ binaries_extracted.files[0] }}"
    # creates: "lib/config.log"
  ansible.builtin.command: >
    ./configure --prefix {{ modules_root_prefix }}/modules
      --enable-versioning
      --enable-set-shell-startup
      --enable-quarantine-support

- name: Quirks¦ Fix src file perms ( root files in original tarball )
  become: yes
  ansible.builtin.shell: "chown --preserve-root -R {{ modules_sys_user }}:{{ modules_sys_user }} {{ modules_build_dir }}"

- name: Build¦ make modules
  become: yes
  become_flags: "-u {{ modules_sys_user }}"
  ansible.builtin.command: "make -j4"
  args:
    chdir: "{{ modules_build_dir }}/{{ binaries_extracted.files[0] }}"

- name: Build¦ install modules
  become: yes
  ansible.builtin.command: "make install"
  args:
    chdir: "{{ modules_build_dir }}/{{ binaries_extracted.files[0] }}"
